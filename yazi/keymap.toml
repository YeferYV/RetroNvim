[manager]

prepend_keymap = [

  # Navigation
	{ on = [ "<A-j>" ], run = "seek 1",    desc = "preview down 3 lines" },
	{ on = [ "<A-k>" ], run = "seek -1",   desc = "preview up 3 lines" },
	{ on = [   "K"   ], run = "arrow -10", desc = "Move cursor up 10 lines" },
	{ on = [   "J"   ], run = "arrow 10",  desc = "Move cursor down 10 lines" },
	{ on = [   "R"   ], run = "refresh",   desc = "Refresh" },

	# Search by First Char
	{ on = [ "f", "a" ], run = "find_do '^a' --smart", desc = "find ^a" },
	{ on = [ "f", "b" ], run = "find_do '^b' --smart", desc = "find ^b" },
	{ on = [ "f", "c" ], run = "find_do '^c' --smart", desc = "find ^c" },
	{ on = [ "f", "d" ], run = "find_do '^d' --smart", desc = "find ^d" },
	{ on = [ "f", "e" ], run = "find_do '^e' --smart", desc = "find ^e" },
	{ on = [ "f", "f" ], run = "find_do '^f' --smart", desc = "find ^f" },
	{ on = [ "f", "g" ], run = "find_do '^g' --smart", desc = "find ^g" },
	{ on = [ "f", "h" ], run = "find_do '^h' --smart", desc = "find ^h" },
	{ on = [ "f", "i" ], run = "find_do '^i' --smart", desc = "find ^i" },
	{ on = [ "f", "j" ], run = "find_do '^j' --smart", desc = "find ^j" },
	{ on = [ "f", "k" ], run = "find_do '^k' --smart", desc = "find ^k" },
	{ on = [ "f", "l" ], run = "find_do '^l' --smart", desc = "find ^l" },
	{ on = [ "f", "m" ], run = "find_do '^m' --smart", desc = "find ^m" },
	{ on = [ "f", "n" ], run = "find_do '^n' --smart", desc = "find ^n" },
	{ on = [ "f", "o" ], run = "find_do '^o' --smart", desc = "find ^o" },
	{ on = [ "f", "p" ], run = "find_do '^p' --smart", desc = "find ^p" },
	{ on = [ "f", "q" ], run = "find_do '^q' --smart", desc = "find ^q" },
	{ on = [ "f", "r" ], run = "find_do '^r' --smart", desc = "find ^r" },
	{ on = [ "f", "s" ], run = "find_do '^s' --smart", desc = "find ^s" },
	{ on = [ "f", "t" ], run = "find_do '^t' --smart", desc = "find ^t" },
	{ on = [ "f", "u" ], run = "find_do '^u' --smart", desc = "find ^u" },
	{ on = [ "f", "v" ], run = "find_do '^v' --smart", desc = "find ^v" },
	{ on = [ "f", "w" ], run = "find_do '^w' --smart", desc = "find ^w" },
	{ on = [ "f", "x" ], run = "find_do '^x' --smart", desc = "find ^x" },
	{ on = [ "f", "y" ], run = "find_do '^y' --smart", desc = "find ^y" },
	{ on = [ "f", "z" ], run = "find_do '^z' --smart", desc = "find ^z" },

	# Filter
	{ on = [ "F" ],      run = """ filter --smart                                          """, desc = "Filter" },
	{ on = [ "g", "d" ], run = """ cd ~/Documents                                          """, desc = "Goto ~/Documents" },
	{ on = [ "g", "D" ], run = """ cd ~/Downloads                                          """, desc = "Goto ~/Downloads" },
	{ on = [ "i" ],      run = """ shell ' bat --paging always --wrap never "$@" ' --block """, desc = "Bat (unix)" },
	{ on = [ "I" ],      run = """ shell ' bat --paging always --wrap never %*   ' --block """, desc = "Bat (windows)" },

  # Shell
	{ on = [ "s", "c" ], run = """ shell ' code "$@"                                                                             ' --block """, desc = "VScode open selected (unix)" },
	{ on = [ "s", "C" ], run = """ shell ' code %*                                                                               ' --block """, desc = "VScode open selected (windows)" },
	{ on = [ "s", "D" ], run = """ search fd                                                                                               """, desc = "Search by content using fd" },
	{ on = [ "s", "e" ], run = """ shell ' eval ${EDITOR:-nvim -u $HOME/.vscode/extensions/yeferyv.retronvim/nvim/init.lua} "$@" ' --block """, desc = "$EDITOR open selected (unix)" },
	{ on = [ "s", "i" ], run = """ shell ' $SWALLOWER sxiv "$@" 2>/dev/null || sxiv "$@"                                         ' --block """, desc = "Swallow sxiv (linux)" },
	{ on = [ "s", "l" ], run = """ shell ' lazygit                                                                               ' --block """, desc = "Lazygit" },
	{ on = [ "s", "n" ], run = """ shell ' nvim "$@"                                                                             ' --block """, desc = "Neovim open selected (unix)" },
	{ on = [ "s", "N" ], run = """ shell ' nvim %*                                                                               ' --block """, desc = "Neovim open selected (windows)" },
	{ on = [ "s", "p" ], run = """ shell ' $SWALLOWER zathura "$@" 2>/dev/null || zathura "$@"                                   ' --block """, desc = "Swallow zathura (linux)" },
	{ on = [ "s", "R" ], run = """ shell ' ripdrag "$@" -x 2>/dev/null &                                                         '         """, desc = "Ripdrag (linux)" },
	{ on = [ "s", "s" ], run = """ shell ' zsh                                                                                   ' --block """, desc = "Open zsh" },
	{ on = [ "s", "v" ], run = """ shell ' $SWALLOWER mpv "$@" 2>/dev/null || mpv "$@"                                           ' --block """, desc = "Swallow mpv (unix)" },
	{ on = [ "s", "V" ], run = """ shell ' mpv %*                                                                                ' --block """, desc = "Mpv open selected (powershell)" },
	{ on = [ "s", "w" ], run = """ shell ' set "HOME=/c/Users/%USERNAME%" && msys2 -full-path -shell zsh                         ' --block """, desc = "Open msys2's zsh'" },
	{ on = [ "s", "x" ], run = """ shell ' $SWALLOWER xdg-open "$1" 2>/dev/null || xdg-open "$1"                                 ' --block """, desc = "Swallow xdg-open (linux)" },
	{ on = [ "s", "z" ], run = """ shell ' printf "Your Name:"; read name; zip "$name.zip" $(basename -a "$@")                   ' --block """, desc = "Zip selected (unix)" },
	{ on = [ "s", "Z" ], run = """ shell ' unzip "$0"                                                                            ' --block """, desc = "Unzip hovered file (unix)" },

  # Plugins
	{ on = [ "l" ], run = "plugin smart-enter",             desc = "open directory or file" },
	{ on = [ "m" ], run = "plugin bookmarks --args=save",   desc = "bookmark create" },
	{ on = [ "'" ], run = "plugin bookmarks --args=jump",   desc = "bookmark jump" },
	{ on = [ '"' ], run = "plugin bookmarks --args=delete", desc = "bookmark delete" },
]

[[manager.append_keymap]]
on = [ "s", "E" ]
run = '''
  shell
  '
    if not %EDITOR% == "" (nvim -u "$HOME/.vscode/extensions/yeferyv.retronvim/nvim/init.lua" %*) else (%EDITOR% %*)
  '
  --block
'''
desc = "$EDITOR open selected (windows)"

[[manager.append_keymap]]
on = [ "s", "S" ]
run = '''
  shell
  "
    bash -c 'y() { yazi --cwd-file=$HOME/.yazi; cd \"$(cat $HOME/.yazi)\"; }; export -f y; stty echo; bash -o vi'
  "
  --block
'''
desc = "open bash"

[[manager.append_keymap]]
on = [ "s", "W" ]
run = '''
  shell
  '
    powershell -noexit -c "set-psreadlineoption -editmode vi; function y() { yazi $PWD --cwd-file=$HOME/.yazi; cd $(cat $HOME/.yazi); };"
  '
  --block
'''
desc = "open powershell"

[[manager.append_keymap]]
on = [ "s", "f" ]
run = '''
  shell
  '
    nvim -u NORC --cmd "lua vim.cmd.source(vim.env.RETRONVIM_INIT or (vim.env.APPDATA and [[~/appdata/local/nvim/init.lua]] or [[~/.config/nvim/init.lua]] ))" -c "lua Snacks.picker.files()"
  '
  --block
'''
desc = "Neovim fzf"

[[manager.append_keymap]]
on = [ "s", "g" ]
run = '''
  shell
  '
    nvim -u NORC --cmd "lua vim.cmd.source(vim.env.RETRONVIM_INIT or (vim.env.APPDATA and [[~/appdata/local/nvim/init.lua]] or [[~/.config/nvim/init.lua]] ))" -c "lua Snacks.picker.grep()"
  '
  --block
'''
desc = "Neovim ripgrep"

[[manager.append_keymap]]
on = [ "s", "r" ]
run = '''
  shell
  '
    rg "" --color=always --line-number | fzf --ansi --delimiter : --preview "bat --color=always {1} --highlight-line {2}" --preview-window "up,60%,+{2},nohidden" --bind "enter:become(ya emit reveal {1} && nvim -u NORC --cmd \"lua vim.cmd.source(vim.env.RETRONVIM_INIT or (vim.env.APPDATA and [[~/appdata/local/nvim/init.lua]] or [[~/.config/nvim/init.lua]] ))\" {1} +{2})"
  '
  --block
'''
desc = "Ripgrep fzf"
